Script started on 2023-06-27 08:37:08+03:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="211" LINES="53"]
[?2004h]0;ebenezer@ebenezer-HP-EliteBook-840-G4: ~/Desktop/Workspace/Helsinki/Helsinki_FSO_Containers[01;32mebenezer@ebenezer-HP-EliteBook-840-G4[00m:[01;34m~/Desktop/Workspace/Helsinki/Helsinki_FSO_Containers[00m$ sudo docker container ls
[?2004l[sudo] password for ebenezer: 
Sorry, try again.
[sudo] password for ebenezer: 
CONTAINER ID   IMAGE     COMMAND                  CREATED      STATUS        PORTS                                         NAMES
f86c93f83e30   mongo     "docker-entrypoint.sâ€¦"   7 days ago   Up 15 hours   0.0.0.0:3456->27017/tcp, :::3456->27017/tcp   todo-backend-mongo-1
[?2004h]0;ebenezer@ebenezer-HP-EliteBook-840-G4: ~/Desktop/Workspace/Helsinki/Helsinki_FSO_Containers[01;32mebenezer@ebenezer-HP-EliteBook-840-G4[00m:[01;34m~/Desktop/Workspace/Helsinki/Helsinki_FSO_Containers[00m$ sudo docker cona[Ktani[K[Kiner exec -it todo-cac[K[K[Kbackend-mongo-1 bash
[?2004l[?2004hroot@f86c93f83e30:/# mongosh -u the_username -p the_passworkd  d
[?2004l]0;mongosh mongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000Current Mongosh Log ID:	649a75dcdaf68fee83884f84
Connecting to:		[1m[32mmongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.9.1[0m
MongoServerError: Authentication failed.
[?2004hroot@f86c93f83e30:/# mongosh -u the_username -p the_password'd'd[1Pd[1Pdd'[1@'e[1@' [1@'
[?2004l]0;mongosh mongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000Current Mongosh Log ID:	649a7601f8068b12e8eb7f5f
Connecting to:		[1m[32mmongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.9.1[0m
MongoServerError: Authentication failed.
[?2004hroot@f86c93f83e30:/# mogosh
[?2004lbash: mogosh: command not found
[?2004hroot@f86c93f83e30:/# mn ongosh
[?2004l]0;mongosh mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000Current Mongosh Log ID:	649a7619a19bece09a8d6c8a
Connecting to:		[1m[32mmongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.9.1[0m
Using MongoDB:		6.0.6
[1m[33mUsing Mongosh[0m:		1.9.1

For mongosh info see: [1mhttps://docs.mongodb.com/mongodb-shell/[0m

[1G[0J [1G[1G[0Jtest> [7Gshow dbs
Uncaught [1m[31mMongoServerError[0m: command listDatabases requires authentication
[1G[0Jtest> [7G-u [32m'[39m[32m'[39m[1G[0Jtest> -u [32m'[39m[11G[1G[0Jtest> -u [10Gthe [1G[0Jtest> -u the[13G_username -p the_password
Uncaught:
[1m[31mSyntaxError[0m: Missing semicolon. (1:2)

[0m[31m[1m>[22m[39m[90m 1 |[39m [33m-[39mu the_username [33m-[39mp the_password[0m
[0m [90m   |[39m   [31m[1m^[22m[39m[0m
[0m [90m 2 |[39m[0m

[1G[0Jtest> [7Gmongodb:[31m/[39m[90m//[39m[90m<[39m[90mu[39m[90ms[39m[90me[39m[90mr[39m[90mn[39m[90ma[39m[90mm[39m[90me[39m[90m>[39m[90m:[39m[90m<[39m[90mp[39m[90ma[39m[90ms[39m[90ms[39m[90mw[39m[90mo[39m[90mr[39m[90md[39m[90m>[39m[90m@[39m[90m<[39m[90mh[39m[90mo[39m[90ms[39m[90mt[39m[90mn[39m[90ma[39m[90mm[39m[90me[39m[90m>[39m[90m:[39m[90m<[39m[90mp[39m[90mo[39m[90mr[39m[90mt[39m[90m>[39m[90m/[39m[90m<[39m[90md[39m[90ma[39m[90mt[39m[90ma[39m[90mb[39m[90ma[39m[90ms[39m[90me[39m[90m>[39m[1G[0Jtest> mongodb:[90m//<username>:<password>@<hostname>:<port>/<database[39m[66G[1G[0Jtest> mongodb:[90m//<username>:<password>@<hostname>:<port>/<databas[39m[65G[1G[0Jtest> mongodb:[90m//<username>:<password>@<hostname>:<port>/<databa[39m[64G[1G[0Jtest> mongodb:[90m//<username>:<password>@<hostname>:<port>/<datab[39m[63G[1G[0Jtest> mongodb:[90m//<username>:<password>@<hostname>:<port>/<data[39m[62G[1G[0Jtest> mongodb:[90m//<username>:<password>@<hostname>:<port>/<dat[39m[61G[1G[0Jtest> mongodb:[90m//<username>:<password>@<hostname>:<port>/<da[39m[60G[1G[0Jtest> mongodb:[90m//<username>:<password>@<hostname>:<port>/<d[39m[59G[1G[0Jtest> mongodb:[90m//<username>:<password>@<hostname>:<port>/<[39m[58G[1G[0Jtest> mongodb:[90m//<username>:<password>@<hostname>:<port>/[39m[57G[1D[1G[0Jtest> mongodb:[90m//<username>:<password>@<hostname>:<port/[39m[55G[1G[0Jtest> mongodb:[90m//<username>:<password>@<hostname>:<por/[39m[54G[1G[0Jtest> mongodb:[90m//<username>:<password>@<hostname>:<po/[39m[53G[1G[0Jtest> mongodb:[90m//<username>:<password>@<hostname>:<p/[39m[52G[1G[0Jtest> mongodb:[90m//<username>:<password>@<hostname>:</[39m[51G[1G[0Jtest> mongodb:[90m//<username>:<password>@<hostname>:/[39m[50G[1C[1G[0Jtest> mongodb:[90m//<username>:<password>@<hostname>:[39m[50G[1G[0Jtest> mongodb:[90m//<username>:<password>@<hostname>[39m[49G[1D[1C[1G[0Jtest> mongodb:[90m//<username>:<password>@<hostname[39m[48G[1G[0Jtest> mongodb:[90m//<username>:<password>@<hostnam[39m[47G[1G[0Jtest> mongodb:[90m//<username>:<password>@<hostna[39m[46G[1G[0Jtest> mongodb:[90m//<username>:<password>@<hostn[39m[45G[1G[0Jtest> mongodb:[90m//<username>:<password>@<host[39m[44G[1G[0Jtest> mongodb:[90m//<username>:<password>@<hos[39m[43G[1G[0Jtest> mongodb:[90m//<username>:<password>@<ho[39m[42G[1G[0Jtest> mongodb:[90m//<username>:<password>@<h[39m[41G[1G[0Jtest> mongodb:[90m//<username>:<password>@<[39m[40G[1G[0Jtest> mongodb:[90m//<username>:<password>@[39m[39G[90ml[39m[90mo[39m[90mc[39m[90ma[39m[90ml[39m[90mh[39m[90mo[39m[90ms[39m[90mt[39m[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1G[0Jtest> mongodb:[90m//<username>:<password@localhost[39m[37G[1G[0Jtest> mongodb:[90m//<username>:<passwor@localhost[39m[36G[1G[0Jtest> mongodb:[90m//<username>:<passwo@localhost[39m[35G[1G[0Jtest> mongodb:[90m//<username>:<passw@localhost[39m[34G[1G[0Jtest> mongodb:[90m//<username>:<pass@localhost[39m[33G[1G[0Jtest> mongodb:[90m//<username>:<pas@localhost[39m[32G[1G[0Jtest> mongodb:[90m//<username>:<pa@localhost[39m[31G[1G[0Jtest> mongodb:[90m//<username>:<p@localhost[39m[30G[1G[0Jtest> mongodb:[90m//<username>:<@localhost[39m[29G[1G[0Jtest> mongodb:[90m//<username>:@localhost[39m[28G[1G[0Jtest> mongodb:[90m//<username>:t@localhost[39m[29G[1G[0Jtest> mongodb:[90m//<username>:th@localhost[39m[30G[1G[0Jtest> mongodb:[90m//<username>:the@localhost[39m[31G[1G[0Jtest> mongodb:[90m//<username>:the_@localhost[39m[32G[1G[0Jtest> mongodb:[90m//<username>:the_p@localhost[39m[33G[1G[0Jtest> mongodb:[90m//<username>:the_pa@localhost[39m[34G[1G[0Jtest> mongodb:[90m//<username>:the_pas@localhost[39m[35G[1G[0Jtest> mongodb:[90m//<username>:the_pass@localhost[39m[36G[1G[0Jtest> mongodb:[90m//<username>:the_passw@localhost[39m[37G[1G[0Jtest> mongodb:[90m//<username>:the_passwo@localhost[39m[38G[1G[0Jtest> mongodb:[90m//<username>:the_passwor@localhost[39m[39G[1G[0Jtest> mongodb:[90m//<username>:the_password@localhost[39m[40G[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1G[0Jtest> mongodb:[90m//<username:the_password@localhost[39m[26G[1D[1D[1D[1D[1D[1D[1D[1D[1G[0Jtest> mongodb:[90m//username:the_password@localhost[39m[17G[1G[0Jtest> mongodb:[90m//tusername:the_password@localhost[39m[18G[1G[0Jtest> mongodb:[90m//thusername:the_password@localhost[39m[19G[1G[0Jtest> mongodb:[90m//theusername:the_password@localhost[39m[20G[1G[0Jtest> mongodb:[90m//the_username:the_password@localhost[39m[21G[31C
[1G[0J... [5G;

[1G[0Jtest> [7Gshow dbs
Uncaught [1m[31mMongoServerError[0m: command listDatabases requires authentication
[1G[0Jtest> [7G
[?2004hroot@f86c93f83e30:/# mongosh[1Pgoshngosh -u 'the_username' -p 'the_password'[1P[1@P[1P[1@U
[?2004lError:   [1m[31mError parsing command line: unrecognized option:[0m [1m-U[0m
        
  [1m$ mongosh [options] [db address] [file names (ending in .js or .mongodb)][0m

  [1m[33mOptions:[0m

    -h, --help                                 Show this usage information
    -f, --file [arg]                           Load the specified mongosh script
        --host [arg]                           Server to connect to
        --port [arg]                           Port to connect to
        --version                              Show version information
        --quiet                                Silence output from the shell during the connection process
        --shell                                Run the shell after executing files
        --nodb                                 Don't connect to mongod on startup - no 'db address' [arg] expected
        --norc                                 Will not run the '.mongoshrc.js' file on start up
        --eval [arg]                           Evaluate javascript
        --json[=canonical|relaxed]             Print result of --eval as Extended JSON, including errors
        --retryWrites[=true|false]             Automatically retry write operations upon transient network errors (Default: true)

  [1m[33mAuthentication Options:[0m

    -u, --username [arg]                       Username for authentication
    -p, --password [arg]                       Password for authentication
        --authenticationDatabase [arg]         User source (defaults to dbname)
        --authenticationMechanism [arg]        Authentication mechanism
        --awsIamSessionToken [arg]             AWS IAM Temporary Session Token ID
        --gssapiServiceName [arg]              Service name to use when authenticating using GSSAPI/Kerberos
        --sspiHostnameCanonicalization [arg]   Specify the SSPI hostname canonicalization (none or forward, available on Windows)
        --sspiRealmOverride [arg]              Specify the SSPI server realm (available on Windows)

  [1m[33mTLS Options:[0m

        --tls                                  Use TLS for all connections
        --tlsCertificateKeyFile [arg]          PEM certificate/key file for TLS
        --tlsCertificateKeyFilePassword [arg]  Password for key in PEM file for TLS
        --tlsCAFile [arg]                      Certificate Authority file for TLS
        --tlsAllowInvalidHostnames             Allow connections to servers with non-matching hostnames
        --tlsAllowInvalidCertificates          Allow connections to servers with invalid certificates
        --tlsCertificateSelector [arg]         TLS Certificate in system store (Windows and macOS only)
        --tlsCRLFile [arg]                     Specifies the .pem file that contains the Certificate Revocation List
        --tlsDisabledProtocols [arg]           Comma separated list of TLS protocols to disable [TLS1_0,TLS1_1,TLS1_2]
        --tlsUseSystemCA                       Load the operating system trusted certificate list
        --tlsFIPSMode                          Enable the system TLS library's FIPS mode

  [1m[33mAPI version options:[0m

        --apiVersion [arg]                     Specifies the API version to connect with
        --apiStrict                            Use strict API version mode
        --apiDeprecationErrors                 Fail deprecated commands for the specified API version

  [1m[33mFLE Options:[0m

        --awsAccessKeyId [arg]                 AWS Access Key for FLE Amazon KMS
        --awsSecretAccessKey [arg]             AWS Secret Key for FLE Amazon KMS
        --awsSessionToken [arg]                Optional AWS Session Token ID
        --keyVaultNamespace [arg]              database.collection to store encrypted FLE parameters
        --kmsURL [arg]                         Test parameter to override the URL of the KMS endpoint

  [1m[33mDB Address Examples:[0m

        foo                                    Foo database on local machine
        192.168.0.5/foo                        Foo database on 192.168.0.5 machine
        192.168.0.5:9999/foo                   Foo database on 192.168.0.5 machine on port 9999
        mongodb://192.168.0.5:9999/foo         Connection string URI can also be used

  [1m[33mFile Names:[0m

        A list of files to run. Files must end in .js and will exit after unless --shell is specified.

  [1m[33mExamples:[0m

        Start mongosh using 'ships' database on specified connection string:
        [1m[32m$ mongosh mongodb://192.168.0.5:9999/ships[0m

  [1mFor more information on usage:[0m [1m[32mhttps://docs.mongodb.com/mongodb-shell[0m.
[?2004hroot@f86c93f83e30:/# mongosh -U 'the_username' -P 'the_password'root@f86c93f83e30:/# mongosh[K -U 'the_username' -P 'the_password'root@f86c93f83e30:/# mongosh[K[1Pgoshngosh -u 'the_username' -p 'the_password'
[?2004l]0;mongosh mongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000Current Mongosh Log ID:	649a76d06bbc155e2a978690
Connecting to:		[1m[32mmongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.9.1[0m
MongoServerError: Authentication failed.
[?2004hroot@f86c93f83e30:/# mongosh -u 'the_username' -p 'the_password'[1P'[1P'[1P'[1P'[1P'[1P'[1P'[1P'[1P'[1P'[1P'[1P'e'x'a'm'p'l'e'[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1@r[1@o[1@o[1@t
[?2004l]0;mongosh mongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000Current Mongosh Log ID:	649a779f7d4d107ee9f2eb4a
Connecting to:		[1m[32mmongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.9.1[0m
Using MongoDB:		6.0.6
[1m[33mUsing Mongosh[0m:		1.9.1

For mongosh info see: [1mhttps://docs.mongodb.com/mongodb-shell/[0m

[1G[0J [1G[1m[33m------[0m
   [1m[33mThe server generated these startup warnings when booting[0m
   2023-06-26T14:09:23.026+00:00: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine. See http://dochub.mongodb.org/core/prodnotes-filesystem
   2023-06-26T14:09:25.072+00:00: vm.max_map_count is too low
[1m[33m------[0m

[1G[0Jtest> [7Gshowdbs
Uncaught [1m[31mReferenceError[0m: showdbs is not defined
[1G[0Jtest> [7Gshow dn[1G[0Jtest> show d[13Gbs
[1madmin[0m         100.00 KiB
[1mconfig[0m         72.00 KiB
[1mlocal[0m          72.00 KiB
[1mthe_database[0m   56.00 KiB
[1G[0Jtest> [7Guse the_database
switched to db the_database
[1G[0Jthe_database> [15Gshow collections
[1mtodos[0m
[1G[0Jthe_database> [15Gdb.todo.find()[1D[1G[0Jthe_database> db.todo.find[44m([49m)[28G[1G[0Jthe_database> db.todo.find[44m([49m{)[29G[1G[0Jthe_database> db.todo.find[44m([49m{})[30G[1C[1G[0Jthe_database> db.todo.find({})[31G

[1G[0Jthe_database> [15G[1G[0Jthe_database> db.todo.find({})[31G[1D[1G[0Jthe_database> db.todo.find[44m([49m{})[30G[1D[1G[0Jthe_database> db.todo.find([44m{[49m})[29G[1D[1G[0Jthe_database> db.todo.find({[44m}[49m)[28G[1D[1G[0Jthe_database> db.todo.find({}[44m)[49m[27G[1D[1G[0Jthe_database> db.todo.find({})[26G[1D[1D[1D[1D[1G[0Jthe_database> db.todos.find({})[23G[9C
[
  {
    _id: ObjectId("64900aa45faa6c831db84f13"),
    text: [32m'Write code'[39m,
    done: [33mtrue[39m
  },
  {
    _id: ObjectId("64900aa45faa6c831db84f14"),
    text: [32m'Learn about containers'[39m,
    done: [33mfalse[39m
  }
]
[1G[0Jthe_database> [15Gdb.tods[1G[0Jthe_database> db.tod[21Gos/[1G[0Jthe_database> db.todos[23G.inserto[1G[0Jthe_database> db.todos.insert[30GOne()[1D[1G[0Jthe_database> db.todos.insertOne[44m([49m)[34G[1G[0Jthe_database> db.todos.insertOne[44m([49m{)[35G[1G[0Jthe_database> db.todos.insertOne[44m([49m{})[36G[1D[1G[0Jthe_database> db.todos.insertOne([44m{[49m})[35G[1G[0Jthe_database> db.todos.insertOne([44m{[49mt})[36G[1G[0Jthe_database> db.todos.insertOne([44m{[49mti})[37G[1G[0Jthe_database> db.todos.insertOne([44m{[49mtit})[38G[1G[0Jthe_database> db.todos.insertOne([44m{[49mtitl})[39G[1G[0Jthe_database> db.todos.insertOne([44m{[49mtitle})[40G[1G[0Jthe_database> db.todos.insertOne([44m{[49mtitl})[39G[1G[0Jthe_database> db.todos.insertOne([44m{[49mtit})[38G[1G[0Jthe_database> db.todos.insertOne([44m{[49mti})[37G[1G[0Jthe_database> db.todos.insertOne([44m{[49mt})[36G[1G[0Jthe_database> db.todos.insertOne([44m{[49m})[35G[1G[0Jthe_database> db.todos.insertOne([44m{[49mt})[36G[1G[0Jthe_database> db.todos.insertOne([44m{[49mte})[37G[1G[0Jthe_database> db.todos.insertOne([44m{[49mtex})[38G[1G[0Jthe_database> db.todos.insertOne([44m{[49mtext})[39G[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m:})[40G[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: })[41G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"})[39m[42G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"I})[39m[43G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"In})[39m[44G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Inc})[39m[45G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Incr})[39m[46G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Incre})[39m[47G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increa})[39m[48G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increas})[39m[49G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase})[39m[50G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase })[39m[51G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase t})[39m[52G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase th})[39m[53G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the})[39m[54G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the })[39m[55G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the n})[39m[56G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the nu})[39m[57G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the num})[39m[58G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the numb})[39m[59G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the numbe})[39m[60G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number})[39m[61G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number })[39m[62G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number o})[39m[63G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number of})[39m[64G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number of })[39m[65G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number of t})[39m[66G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number of to})[39m[67G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number of too})[39m[68G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number of tool})[39m[69G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number of tools})[39m[70G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number of tools })[39m[71G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number of tools i})[39m[72G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number of tools in})[39m[73G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number of tools in })[39m[74G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number of tools in m})[39m[75G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number of tools in my})[39m[76G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number of tools in my })[39m[77G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number of tools in my t})[39m[78G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number of tools in my to})[39m[79G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number of tools in my too})[39m[80G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number of tools in my tool})[39m[81G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number of tools in my toolb})[39m[82G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number of tools in my toolbe})[39m[83G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number of tools in my toolbel})[39m[84G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number of tools in my toolbelt})[39m[85G[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Increase the number of tools in my toolbelt"[39m})[86G[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Increase the number of tools in my toolbelt"[39m,})[87G[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Increase the number of tools in my toolbelt"[39m, })[88G[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Increase the number of tools in my toolbelt"[39m, d})[89G[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Increase the number of tools in my toolbelt"[39m, [36mdo[39m})[90G[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Increase the number of tools in my toolbelt"[39m, don})[91G[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Increase the number of tools in my toolbelt"[39m, done})[92G[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Increase the number of tools in my toolbelt"[39m, [33mdone[39m:})[93G[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Increase the number of tools in my toolbelt"[39m, [33mdone[39m: })[94G[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Increase the number of tools in my toolbelt"[39m, [33mdone[39m: f})[95G[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Increase the number of tools in my toolbelt"[39m, [33mdone[39m: fa})[96G[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Increase the number of tools in my toolbelt"[39m, [33mdone[39m: fal})[97G[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Increase the number of tools in my toolbelt"[39m, [33mdone[39m: fals})[98G[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Increase the number of tools in my toolbelt"[39m, [33mdone[39m: [33mfalse[39m})[99G[2C[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Increase the number of tools in my toolbelt"[39m, [33mdone[39m: [33mfalse[39m})[101G
{
  acknowledged: [33mtrue[39m,
  insertedId: ObjectId("649a788f7d4d107ee9f2eb4b")
}
[1G[0Jthe_database> [15Gdb.todos.find({})
[
  {
    _id: ObjectId("64900aa45faa6c831db84f13"),
    text: [32m'Write code'[39m,
    done: [33mtrue[39m
  },
  {
    _id: ObjectId("64900aa45faa6c831db84f14"),
    text: [32m'Learn about containers'[39m,
    done: [33mfalse[39m
  },
  {
    _id: ObjectId("649a788f7d4d107ee9f2eb4b"),
    text: [32m'Increase the number of tools in my toolbelt'[39m,
    done: [33mfalse[39m
  }
]
[1G[0Jthe_database> [15G
[?2004hroot@f86c93f83e30:/# [?2004l
exit
[?2004h]0;ebenezer@ebenezer-HP-EliteBook-840-G4: ~/Desktop/Workspace/Helsinki/Helsinki_FSO_Containers[01;32mebenezer@ebenezer-HP-EliteBook-840-G4[00m:[01;34m~/Desktop/Workspace/Helsinki/Helsinki_FSO_Containers[00m$ exit
[?2004lexit

Script done on 2023-06-27 08:51:12+03:00 [COMMAND_EXIT_CODE="0"]
